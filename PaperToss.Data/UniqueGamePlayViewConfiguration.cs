
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DodgeBall.Data
{

    using DodgeBall.Model;


    // UniqueGamePlayView

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.20.1.0")]
    public partial class UniqueGamePlayViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UniqueGamePlayView>
    {
        public UniqueGamePlayViewConfiguration()
            : this("dbo")
        {
        }

        public UniqueGamePlayViewConfiguration(string schema)
        {

            ToTable(schema + ".UniqueGamePlayView");

            HasKey(x => new { x.ConsumerId, x.FuelId, x.GamePlayId, x.LevelPlayed, x.PlayedDate, x.Score, x.ScoreTime });


            Property(x => x.ConsumerId).HasColumnName(@"Consumer_ID").IsRequired().HasColumnType("int");

            Property(x => x.FuelId).HasColumnName(@"Fuel_ID").IsRequired().HasColumnType("int");

            Property(x => x.GamePlayId).HasColumnName(@"GamePlayID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.LevelPlayed).HasColumnName(@"LevelPlayed").IsRequired().HasColumnType("int");

            Property(x => x.PlayedDate).HasColumnName(@"PlayedDate").IsRequired().HasColumnType("datetime");

            Property(x => x.Score).HasColumnName(@"Score").IsRequired().HasColumnType("decimal").HasPrecision(18,3);

            Property(x => x.ScoreTime).HasColumnName(@"ScoreTime").IsRequired().HasColumnType("int");




            InitializePartial();
        }

        partial void InitializePartial();
    }



}
// </auto-generated>
