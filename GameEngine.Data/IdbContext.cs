// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace GameEngine.Data
{
    using GameEngine.Model;

    public interface IdbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Config> Configs { get; set; } // Config
        System.Data.Entity.DbSet<Consumer> Consumers { get; set; } // Consumer
        System.Data.Entity.DbSet<Fuel> Fuels { get; set; } // Fuel
        System.Data.Entity.DbSet<GameDataCapture> GameDataCaptures { get; set; } // GameDataCapture
        System.Data.Entity.DbSet<GameEventDatum> GameEventDatums { get; set; } // GameEventData
        System.Data.Entity.DbSet<GamePlay> GamePlays { get; set; } // GamePlay
        System.Data.Entity.DbSet<GamePlayView> GamePlayViews { get; set; } // GamePlayView
        System.Data.Entity.DbSet<Score> Scores { get; set; } // Scores
        System.Data.Entity.DbSet<UniqueGamePlayView> UniqueGamePlayViews { get; set; } // UniqueGamePlayView

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        
        // Stored Procedures
        System.Collections.Generic.List<GameDashboardReturnModel> GameDashboard(string consumerId, string campaignKey, System.DateTime? startDate);
        System.Collections.Generic.List<GameDashboardReturnModel> GameDashboard(string consumerId, string campaignKey, System.DateTime? startDate, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GameDashboardReturnModel>> GameDashboardAsync(string consumerId, string campaignKey, System.DateTime? startDate);

    }

}
// </auto-generated>
